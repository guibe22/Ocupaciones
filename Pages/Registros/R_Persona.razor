@page "/persona"

@page "/persona/{PersonaId:int}"

@inject PersonasBLL PersonasBLL

@inject OcupacionesBLL ocupacionesBll

<EditForm Model="persona" OnInvalidSubmit="Guardar">

    <div class="card text-primary">
        <div class="card-header text-center">
            <h1>Registro De Personas</h1>
        </div>
        <div class="card-body">
            <div class="col-3">

                <label for="txtId"class="form-label">Persona ID:</label>
                <input type="number"  id="txtId" class="form-control" @bind-value="persona.PersonaId">
            </div>

            <button name="btnBuscar" id="btnBuscar" class="btn btn-primary" @onclick="Buscar">
                 <span class="oi oi-magnifying-glass"></span> Buscar
            </button>

            <div class="col-6">

                <label for="txtNombre"class="form-label">Nombre:</label>
                <input type="text"  id="txtNombre" class="form-control" @bind-value="persona.Nombre">
                
            </div>

            <div class="row">

                <div class="col-6">

                <label for="txtTelefono"class="form-label">Telefono:</label>
                <input type="number"  id="txtTelefono" class="form-control" @bind-value="persona.Telefono">
                
                </div>

                 <div class="col-6">

                <label for="txtCelcular"class="form-label">Celular:</label>
                <input type="number"  id="txtCelcular" class="form-control" @bind-value="persona.Celular">
                
                </div>

            </div>

             <div class="row">

                <div class="col-6">

                    <label for="txtEmail"class="form-label">Email:</label>
                    <input type="email" id="txtEmail" class="form-control" @bind-value="persona.Email">
                
                </div>
                <div class="col-6">

                    <label for="txtDireccion"class="form-label">Direccion:</label>
                    <input type="text"  id="txtDireccion" class="form-control" @bind-value="persona.Direccion">
                
                </div>
             </div>

             <div class="row">

                <div class="col-6">

                    <label for="txtFecha"class="form-label">Fecha:</label>
                    <input type="date"  id="txtFecha" class="form-control" @bind-value="persona.FechaNacimiento">
                
                </div>

            <div class="col-6">

                    <label for="txtOcupacionId"class="form-label">Ocupacion ID:</label>
                    <input type="Number"  id="txtOcupacionId" class="form-control" @bind-value="persona.OcupacionId">
                
            </div>
             </div>


        </div>

        <div class=" card-footer text-center">

             <button name="btNuevo" id="btNuevo" class="btn btn-primary mr-2" @onclick="Nuevo">
            <span class="oi oi-plus"></span> Nuevo
            </button>

            <button name="btnGuardar" id="btnGuardar" class="btn btn-success mr-2" @onclick="Guardar">
            <span class=" oi oi-cloud-download"></span> Guardar
            </button>

            <button name="btnEliminar" id="btnEliminar" class="btn btn-danger"  @onclick="Eliminar">
            <span class="oi oi-trash"></span> Eliminar
            </button>
        </div>
    </div>


</EditForm>


@code {

    [Parameter]


    public int PersonaId { get; set; }
    public Persona persona { get; set; } =new Persona();

    protected override void OnInitialized()
        {
            if(PersonaId>0){
                this.persona.PersonaId = PersonaId;
                this.Buscar();
           }
        }

    void Buscar(){

        
            var PersonaEncontrada= PersonasBLL.Buscar(this.persona.PersonaId);

            if(PersonaEncontrada!=null){
                this.persona= PersonaEncontrada;
            }
            
        }

    void Eliminar(){

        if(PersonasBLL.Eliminar(this.persona)){Nuevo();}

            this.Nuevo();
        }
    
    bool Validar(){

        bool validacion= true;

        if (String.IsNullOrEmpty(persona.Nombre)){ validacion= false;}
        if (String.IsNullOrEmpty(persona.Telefono)|| persona.Telefono.Length !=10) { validacion= false;}
        if (String.IsNullOrEmpty(persona.Celular)|| persona.Celular.Length !=10 ){ validacion= false;}
        if (String.IsNullOrEmpty(persona.Email)){ validacion= false;}
        if (String.IsNullOrEmpty(persona.Direccion)){ validacion= false;}
        if (!ocupacionesBll.Existe(persona.OcupacionId)){ validacion= false;}

        return validacion;

    }

    void Guardar(){

            if(!Validar()){ return;}

            if( PersonasBLL.Guardar(this.persona)){Nuevo();}



        }

    void Nuevo(){

        this.persona= new Persona();
    }

       


    


        





}
